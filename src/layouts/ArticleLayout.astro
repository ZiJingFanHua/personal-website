---
import type { MarkdownHeading } from "astro";
import type { CollectionEntry } from "astro:content";
import HeadCommon from "../components/BlogHead/HeadCommon.astro";
import HeadSEO from "../components/BlogHead/HeadSEO.astro";
import { Provider } from '@/components/provider/Provider'
import Header from "../components/Header/Header.astro";
import PageContent from "../components/BlogContent/PageContent.astro";
import RightSidebar from "../components/BlogRightSidebar/RightSidebar.astro";
import { GITHUB_EDIT_URL, SITE } from "../consts";

type Props = CollectionEntry<"docs">["data"] & {
	headings: MarkdownHeading[];
};

const { headings, ...data } = Astro.props;
const canonicalURL = new URL(Astro.url.pathname, Astro.site);
const currentPage = Astro.url.pathname;
const currentFile = `src/content/docs${currentPage.replace(/\/$/, "")}.md`;
const githubEditUrl = `${GITHUB_EDIT_URL}/${currentFile}`;
---

<html dir={data.dir} lang={data.lang} class="initial">
	<head>
		<HeadCommon />
		<HeadSEO {...data} canonicalUrl={canonicalURL} />
		<title>
			{`${data.title}--${SITE.title}`}
		</title>
		<style>
			body {
				width: 100%;
				/* display: grid; */
				/* grid-template-rows: var(--theme-navbar-height) 1fr; */
				--gutter: 0.5rem;
				--doc-padding: 2rem;
			}

			.layout {
				padding-top:50px;
				display: grid;
				grid-auto-flow: column;
				grid-column-gap: 50px;
				grid-template-columns:  auto;
			}

			.grid-sidebar {
				/* height: 100vh; */
				height: calc(100vh - var(--theme-navbar-height));
				position: sticky;
				top: var(--theme-navbar-height);
				padding: 0;
			}

			#grid-left {
				position: fixed;
				height: calc(100vh - var(--theme-navbar-height));
				background-color: var(--theme-bg);
				z-index: 10;
				display: none;
			}

			#grid-main {
				padding: var(--doc-padding) var(--gutter);
				grid-column: 2;
				display: flex;
				flex-direction: column;
				height: 100%;
			}

			#grid-right {
				display: none;
			}

			@media (min-width: 50em) {
				.layout {
					overflow: initial;
					grid-column-gap: 50px;
					/* grid-template-columns: 20rem minmax(0, var(--max-width)); */
					grid-template-columns: 300px auto;
					gap: 1em;
				}

				#grid-left {
					display: flex;
					padding: 2rem 0 0 2rem;
					position: sticky;
					grid-column: 1;
				}
			}

			@media (min-width: 72em) {
				.layout {
					grid-column-gap: 50px;
					/* grid-template-columns: 20rem minmax(0, var(--max-width)) 18rem; */
					grid-template-columns: 300px auto 300px;
					padding-left: 0;
					padding-right: 0;
					margin: 0 auto;
				}

				#grid-right {
					grid-column: 3;
					display: flex;
				}
			}
		</style>
		<style is:global>
			.layout > * {
				width: 100%;
				/* height: 100%; */
			}

			.mobile-sidebar-toggle {
				overflow: hidden;
			}

			.mobile-sidebar-toggle #grid-left {
				display: block;
				top: 2rem;
			}
		</style>
	</head>
	<body>
		<Provider  pathName={Astro.url.pathname} title={data.title} description={data.description} client:only="react"/>
		<Header ></Header>
		<main class="layout">
			<div id="grid-main">
				<PageContent
					title={data.title}
					headings={headings}
					githubEditUrl={githubEditUrl}
				>
					<slot />
				</PageContent>
			</div>
			<aside id="grid-right" class="grid-sidebar" title="Table of Contents">
				<RightSidebar headings={headings} githubEditUrl={githubEditUrl} />
			</aside>
		</main>
	</body>
</html>
